<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 

<mapper namespace="goods">
	<!-- 시퀀스 뽑기 -->
	<select id="getSequence" resultType="int">
		select goods_seq.currval from dual
	</select>

	<!-- 상품 등록  -->
	<insert id="insert" parameterType="GoodsDto">
		insert into goods values(
			goods_seq.nextval,
			#{seller_no},
			#{goods_name},
			#{goods_price},
		<choose>
			<when test="goods_discount_price != null 
						and goods_discount_start != null 
						and goods_discount_finish != null">
				#{goods_discount_price},
				#{goods_discount_start},
				#{goods_discount_finish},
			</when>
			<otherwise>
				0, null, null,
			</otherwise>			
		</choose>
			#{goods_stock},
			#{goods_status},
			#{goods_content},
			#{category_no}
		)
	</insert>

	<!-- 상품 삭제  -->
	<delete id="delete" parameterType="int">
		delete goods where goods_no = #{goods_no}
	</delete>
	
	<!-- 단일 조회  -->
	<select id="get" parameterType="int" resultType="goodsDto">
		select * from goods where goods_no = #{goods_no}
	</select>
	
	<!-- 전체 조회  -->
	<select id="getList" resultType="goodsDto">
		select * from goods
	</select>
	
	<resultMap type="goodsVO" id="getGoodsVO">
		<result column="goods_no" property="goods_no"/>
		<result column="seller_no" property="seller_no"/>
		<result column="goods_name" property="goods_name"/>
		<result column="goods_price" property="goods_price"/>
		<result column="goods_discount_price" property="goods_discount_price"/>
		<result column="goods_discount_start" property="goods_discount_start"/>
		<result column="goods_discount_finish" property="goods_discount_finish"/>
		<result column="goods_stock" property="goods_stock"/>
		<result column="goods_status" property="goods_status"/>
		<result column="goods_content" property="goods_content"/>
		<result column="category_no" property="category_no"/>
		
		<collection property="goodsOptionList" javaType="list" 
					ofType="goodsOptionDto" select="getGoodsOption" column="goods_no"></collection>
	</resultMap>
	
	<select id="getGoodsVO" parameterType="int" resultMap="getGoodsVO">
		select * from goods where goods_no = #{goods_no}
	</select> 
	
	<select id="getGoodsOption" parameterType="int" resultType="goodsOptionDto">
		select * from goods_option where goods_no = #{goods_no}
	</select>
	
<!-- 상품 문의게시판 -->
	<!-- 상품에 대한 seller_no 뽑기 -->
	<select id="getSeller" parameterType="int" resultType="int">
		select seller_no from goods where goods_no=#{goods_no}
	</select>
	<!-- 단일조회 -->
	<select id="getQna" parameterType="int" resultType="goodsQnaDto"> 
		select *from goods_qna where goods_qna_no=#{goods_qna_no}
	</select>
	
	<!-- 구매자 문의 입력 -->
	<insert id="insertQ" parameterType="goodsQnaDto">
		insert into goods_qna(goods_qna_no, goods_no, seller_no, member_no,
							                    goods_qna_content, goods_qna_writer, goods_qna_date,goods_qna_head,
							                    goods_qna_groupno,goods_qna_superno,goods_qna_status)
			        values(goods_qna_seq.nextval, #{goods_no}, #{seller_no}, #{member_no},
			                    #{goods_qna_content}, #{goods_qna_writer}, sysdate, #{goods_qna_head},
			                    goods_qna_seq.currval, null, null)
	</insert>
	<update id="updateQ" parameterType="goodsQnaDto">
		update goods_qna 
			set goods_qna_content= #{goods_qna_content}, goods_qna_date= sysdate
		where goods_qna_no= #{goods_qna_no}
				and member_no= #{member_no} and goods_qna_status is null
	</update>
	<delete id="deleteQ" parameterType="goodsQnaDto">
		delete goods_qna
			where member_no=#{member_no} and goods_qna_no=#{goods_qna_no}
	</delete>
	
	<!-- 목록 -->
	<select id="getQnaCount" parameterType="int" resultType="int">
		select count(*) from goods_qna where goods_no=#{goods_no}
	</select>
	<select id="getListQna" parameterType="int" resultType="goodsQnaDto">
		select *from(
			select rownum rn, RN.* from(
			    select *from goods_qna where goods_no=#{goods_no}
			    connect by prior goods_qna_no=goods_qna_superno start with goods_qna_superno is null
			    order SIBLINGS by goods_qna_groupno desc, goods_qna_no asc
			)RN
		)where rn between #{start} and #{finish}
	</select>
	
	<!-- 판매자 문의 답변 -->
	<insert id="insertA" parameterType="goodsQnaDto">
		insert into goods_qna(goods_qna_no, goods_no, seller_no,
							                    goods_qna_content, goods_qna_writer, goods_qna_date,goods_qna_head,
							                    goods_qna_groupno,goods_qna_superno,goods_qna_status)
			        values(goods_qna_seq.nextval, #{goods_no}, #{seller_no},
				                 #{goods_qna_content}, #{goods_qna_writer}, sysdate, '답변',
				                #{goods_qna_groupno}, #{goods_qna_superno},'답변완료')
	</insert>

	<!-- 상품 문의 답변완료 처리 -->
	<update id="getIsQna" parameterType="int">
		update goods_qna set goods_qna_status='답변완료'
			where goods_qna_groupno=#{goods_qna_groupno} and goods_qna_status is null
	</update>
</mapper>


