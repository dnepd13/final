<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="review">
 	<select id="getNoCurr" resultType="int">
 		select goods_review_seq.currval from dual
 	</select>
 	
 	<select id="getGoodsNo" parameterType="int" resultType="int">
 		select goods_no from cart_info_goods where cart_info_goods_no=#{cart_info_goods_no}
 	</select>
 	
 	<!-- 리뷰입력 -->
 	<insert id="insertReview" parameterType="goodsReviewDto">
 		insert into goods_review(goods_review_no, goods_no, cart_info_goods_no, member_no, 
 													goods_review_writer, goods_review_content, goods_review_date,
 													goods_review_star)
 					values(goods_review_seq.nextval, #{goods_no}, #{cart_info_goods_no}, #{member_no}, 
 								#{goods_review_writer}, #{goods_review_content}, sysdate,
 								#{goods_review_star})
 	</insert>
 	<insert id="insertFiles" parameterType="com.kh.ordering.entity.GoodsReviewFilesDto">
 		insert into files_goods_review values(#{goods_review_no}, #{files_no})
 	</insert>
 	
 	<!-- 리뷰출력 -->
 	<select id="getReview" parameterType="int" resultType="goodsReviewDto">
 		select *from(
		    select rownum rn, RN.* from(
		        select A.*, b.seller_no
		            from goods_review A inner join goods B
		                on A.goods_no = B.goods_no where B.goods_no=#{goods_no}
		    )RN
		)where rn between #{start} and #{finish}
 	</select>
 	<!-- 리뷰개수 -->
 	<select id="getCount" parameterType="int" resultType="int">
 		select count(*) from goods_review where goods_no =#{goods_no}
 	</select>
 	
 	<!-- 상품 리뷰 평점 -->
 	<select id="getStarAvg" parameterType="int" resultType="int">
		select round(avg(goods_review_star),2) from goods_review where goods_no=#{goods_no}
 	</select>
 	
 	<!-- 리뷰 파일 출력 -->
 	<select id="getFilesNo" parameterType="int" resultType="FilesVO">
		select files.files_no , files_goods_review.goods_review_no
			from
			files inner join files_goods_review on files_goods_review.files_no = files.files_no
		    		inner join goods_review on goods_review.goods_review_no = files_goods_review.goods_review_no
		where goods_review.goods_review_no = #{goods_review_no}
	</select>
	
	<select id="getGoodsNoReview" parameterType="int" resultType="int">
		select goods_no from goods_review where goods_review_no=#{goods_review_no}
	</select>
	
	<!-- 리뷰 댓글 -->
	<insert id="insertReply" parameterType="goodsReviewReplyDto">
		insert into goods_review_reply (goods_review_reply_no, goods_review_no, member_no,
																goods_review_reply_content, goods_review_reply_writer, goods_review_reply_date)
					values(goods_review_reply_seq.nextval, #{goods_review_no}, #{member_no},
								#{goods_review_reply_content}, #{goods_review_reply_writer}, sysdate)
	</insert>
	<select id="getListReply" parameterType="int" resultType="goodsReviewReplyDto">
		select *from goods_review_reply where goods_review_no=#{goods_review_no} order by goods_review_reply_date asc
	</select>
	<update id="updateReply" parameterType="goodsReviewReplyDto">
		update goods_review_reply set goods_review_reply_content=#{goods_review_reply_content}
			where member_no=#{member_no} and goods_review_reply_no=#{goods_review_reply_no}
	</update>
	<delete id="deleteReply" parameterType="int">
		delete goods_review_reply where goods_review_reply_no=#{goods_review_reply_no}
	</delete>

 </mapper>