<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <!-- 
 	명령을 전달하기 위한 파일 
 	namespace : 영역을 부르는 별칭
 	parameterType : 이 명령을 실행하기 위해 필요한 데이터의 형태
 	resultType : 기대되는 결과물의 형태 (목록이든 아니든 dto 형태로 표기)
 	
 	부등호(<,>,=)를 쓰고 싶다면 
 	<![CDATA[
 	이곳에 명령어를 넣는다
 	]]> 
	
	형태에 따라 파라미터를 다르게 설정할 수 있다
	- #은 형태를 추론해 자동으로 따옴표 설정 및 인코딩 처리를 수행
	- $는 값을 있는 그대로 출력하는 명령이므로 주로 "항목"에 사용
		-$의 경우 SQL Injection 이라는 해킹 공격에 매우 취약하므로 사용에 주의
		
		##이건 안쓰는 테스트용입니다
 -->

 
 <mapper namespace="pay">
 	<!-- 결제 준비 등록 -->
 	<insert id="ready" parameterType="payDto">
 		insert into ordering(ordering_no, tid, cid, process_time, item_name,
 							partner_order_id, partner_user_id, quantity, total_amount,
 							ordering_status,aid,install_month, used_point, tax_free_amount,
 							vat_amount
 							)
 			values(
 				ordering_seq.nextval,
 				#{tid}, #{cid}, to_date(#{process_time}, 'YYYY-MM-DD"T"HH24:MI:SS'),
 				#{item_name}, #{partner_order_id}, #{partner_user_id},
 				#{quantity}, #{total_amount}, '결제준비완료', '1', '0', '0', '0', '0'
 			)
 	</insert>
	
	<insert id="success" parameterType="payDto">
		insert into ordering(ordering_no, tid, cid, process_time, item_name,
 							partner_order_id, partner_user_id, quantity, total_amount,
 							ordering_status,aid,install_month, used_point, tax_free_amount,
 							vat_amount
 							)
 			values(
 				ordering_seq.nextval,
 				#{tid}, #{cid}, to_date(#{process_time}, 'YYYY-MM-DD"T"HH24:MI:SS'),
 				#{item_name}, #{partner_order_id}, #{partner_user_id},
 				#{quantity}, #{total_amount}, '결제완료', #{aid}, '0', #{used_point}, '0', #{vat_amount}
 			)
	</insert>
	
	<select id="list" resultType="payDto">
		select * from ordering order by ordering_no 
	</select>
	
	<select id="get" resultType="payDto" parameterType="int">
		select * from ordering where ordering_no = #{ordering_no}
	</select>
	
	<insert id="revoke" parameterType="payDto">
		insert into ordering(ordering_no, tid, cid, process_time, item_name,
 							partner_order_id, partner_user_id, quantity, total_amount,
 							ordering_status,aid,install_month, used_point, tax_free_amount,
 							vat_amount
 							)
 			values(
 				ordering_seq.nextval,
 				#{tid}, #{cid}, to_date(#{process_time}, 'YYYY-MM-DD"T"HH24:MI:SS'),
 				#{item_name}, #{partner_order_id}, #{partner_user_id},
 				#{quantity}, #{total_amount}, '결제취소', #{aid}, '0', '0', '0', '0'
 			)
	</insert>
	
	<select id="getSequenceOrdering" resultType="int">
		select ordering_seq.currval from dual
	</select>
	
	<select id="getSequenceCartInfo" resultType="int">
		select cart_info_seq.nextval from dual
	</select>
	
	<select id="getSequenceGoods" resultType="int">
		select cart_info_goods_seq.nextval from dual
	</select>
	
	<insert id="insertCartInfo" parameterType="cartInfoDto">
		insert into cart_info values(
			#{cart_info_no},
			#{member_no},
			null,
			#{cart_info_addr_post},
			#{cart_info_addr_basic},
			#{cart_info_addr_extra},
			#{cart_info_addr_status},
			#{total_price},
			#{total_quantity},
			#{total_delivery_price},
			#{used_point},
			#{cart_info_status},
			#{partner_order_id},
			#{delivery_name}
		)		
	</insert>
	<insert id="insertCartInfoGoods" parameterType="list">
		<foreach collection="list" item="cartInfoGoodsDto" open="insert all" close="select * from dual">
			into cart_info_goods values(
				#{cartInfoGoodsDto.cart_info_goods_no},
				#{cartInfoGoodsDto.cart_info_no},
				#{cartInfoGoodsDto.goods_no},
				#{cartInfoGoodsDto.cart_info_goods_quantity},
				#{cartInfoGoodsDto.cart_info_goods_price}		
			)
		</foreach>
	</insert>
	
	<insert id="insertCartInfoOp" parameterType="list">
		<foreach collection="list" item="cartInfoOpDto" index="index" open="insert all" close="select * from dual">
			into cart_info_op values(
				get_cart_info_op_seq,
				#{cartInfoOpDto.cart_info_goods_no},
				#{cartInfoOpDto.goods_option_no}
			)
		</foreach>
	</insert>
	
	<select id="getPartnerOrderId" resultType="int">
		select partner_order_id_seq.nextval from dual
	</select>
	
	<update id="updateStatus"  parameterType="String">
		update cart_info set cart_info_status = '결제완료' where partner_order_id = #{partner_order_id}
	</update>
	
 </mapper> 




