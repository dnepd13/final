<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="order">
	<select id="getOrdering_no" parameterType="String" resultType="int">
		select ordering_no from ordering where partner_order_id = #{partner_order_id} and ordering_status = '결제완료'
	</select>

	<select id="getCartInfoNo" parameterType="String" resultType="int">
		select cart_info_no from cart_info where partner_order_id = #{partner_order_id}
	</select>

	<select id="getCartInfo" parameterType="String" resultType="cartInfoDto">
		select * from cart_info where partner_order_id = #{partner_order_id}
	</select>
	
	<select id="getCartInfoGoods" parameterType="int" resultType="cartInfoGoodsDto">
		select * from cart_info_goods where cart_info_no = #{cart_info_no}
	</select>
	
	<select id="getCartInfoOp" parameterType="int" resultType="cartInfoOpDto">
		select * from cart_info_op where cart_info_goods_no = #{cart_info_goods_no}
	</select>
	
	<select id="getMember_no" parameterType="String" resultType="int">
		select member_no from cart_info where partner_order_id = #{partner_order_id}
	</select>
	
	<!-- 회원번호를 기준으로 주문/결제내역(ordering+cart_info) 목록 가져오기 -->
	<select id="getCartInfoMember" parameterType="int" resultType="cartInfoVO">
		select *from(
		    select rownum rn, RN.*from(
		        select distinct A.*, ordering.item_name
				    from
				        cart_info A inner join ordering on A.partner_order_id = ordering.partner_order_id
				    where cart_info_status='결제완료' or cart_info_status='결제취소'
				    order by a.cart_info_no desc
		    )RN where RN.member_no=#{member_no}
		)where rn between #{start} and #{finish}
 	</select>
 	<!-- cartinfo No 단일조회 가져오기 -->
 	<select id="getCartInfoDto" parameterType="int" resultType="cartInfoDto">
 		select *from cart_info where cart_info_no=#{cart_info_no}
 	</select>
 	
 	<select id="getCartInfoCount" parameterType="int" resultType="int">
 		select count(*) from cart_info where member_no=#{member_no} and cart_info_status='결제완료' or cart_info_status='결제취소'
 	</select>
 	<!-- 결제내용 상세페이지 -->
 	<select id="getCartPay" parameterType="String" resultType="cartInfoVO">
 		select ordering.ordering_no, ordering.process_time, ordering.item_name, ordering.ordering_status,
	        ordering.total_amount, ordering.tax_free_amount, ordering.vat_amount,
	        cart_info.*
	    from cart_info
	    	inner join ordering
	            on cart_info.partner_order_id = ordering.partner_order_id
	    where cart_info.partner_order_id=#{partner_order_id}
	    order by ordering.ordering_no desc
 	</select>
 	
 	<!-- cart_info_no에 대한 상품 주문내역 -->
	<select id="getCartGoods" parameterType="int" resultType="cartDetailsVO">
		select A.member_no, A.cart_info_status, B.*, c.goods_name, c.goods_price, c.category_no,
		        cart_ok.member_no, cart_ok.cart_ok_status
		    from
		        cart_info A inner join cart_info_goods B on A.cart_info_no = B.cart_info_no
				                    inner join goods C on B.goods_no = C.goods_no
				                    inner join cart_ok on b.cart_info_goods_no = cart_ok.cart_info_goods_no
		    where A.cart_info_no =#{cart_info_no}
	</select>
	<!-- cart_info_goods에 대한 옵션 주문내역 -->
	<select id="getCartOption" parameterType="int" resultType="cartDetailsVO">
		select A.cart_info_goods_no, C.*
		    from
		        cart_info_goods A inner join cart_info_op B on A.cart_info_goods_no = B.cart_info_goods_no
		                          				  inner join goods_option C on B.goods_option_no = c.goods_option_no
		    where a.cart_info_goods_no=#{cart_info_goods_no}
	</select>
 	
 	<select id="getCustomOrder" parameterType="int" resultType="customOrderDto">
 		select *from custom_order where custom_order_no = #{custom_order_no}
 	</select>
 	
 	<!-- 상품별 구매확정 테이블 -->
 	<insert id="insertCartOk" parameterType="cartOkDto">
 		insert into cart_ok(cart_ok_no, cart_info_goods_no, member_no)
        					values(cart_ok_seq.nextval, #{cart_info_goods_no}, #{member_no})
 	</insert>
 	<insert id="insertCartOkCustom" parameterType="cartOkDto">
 		insert into cart_ok(cart_ok_no, cart_info_custom_no, member_no)
        					values(cart_ok_seq.nextval, #{cart_info_custom_no}, #{member_no})
 	</insert>
	<select id="getOkList" parameterType="int" resultType="cartOkDto">
		select cart_ok.* from
		    cart_ok left join cart_info_goods A
		        on cart_ok.cart_info_goods_no = A.cart_info_goods_no
		        		left join cart_info B
		        on cart_ok.cart_info_custom_no = B.cart_info_no
			where A.cart_info_goods_no=#{cart_info_goods_no}
	</select>

	<!-- 구매확정 시 상태 업데이트 -->
	<update id="updateCartOk" parameterType="int">
		update cart_ok set cart_ok_status='구매확정', cart_ok_date=sysdate
			where cart_info_goods_no=#{cart_info_goods_no}
	</update>
	<!-- 리뷰등록 시 상태 업데이트 -->
	<update id="updateCartReview" parameterType="int">
		update cart_ok set cart_ok_status='리뷰등록'
			where cart_info_goods_no=#{cart_info_goods_no}
	</update>
	
	<!-- 카테고리번호를 통한 최근 한달 이내, 상품 판매량 Top5 판매자 -->
	<select id="getTopSales" parameterType="int" resultType="CartInfoVO">
		select *from(
			select rownum rn, RN.*from(
				select A.seller_no, sum(cart_info_goods.cart_info_goods_quantity), A.seller_id from
				    seller_category inner join seller A on seller_category.seller_no = A.seller_no
				            inner join goods on A.seller_no=goods.seller_no
				            inner join cart_info_goods on goods.goods_no = cart_info_goods.goods_no
				    where seller_category.category_no = #{category_no}
				group by A.seller_no, A.seller_id
				order by sum(cart_info_goods.cart_info_goods_quantity) desc
			)RN
		)where rn between 1 and 5 and sysdate >= sysdate-30
	</select>
	
	
	<!-- 회원 마이페이지용 최근 3일 구매내역 4개 -->
	<select id="getListYesterDay" parameterType="int" resultType="cartInfoVO">
		select *from(
		    select rownum rn, RN.*from(
		        select a.*,
		            ordering.item_name, ordering.process_time
		                from
		                cart_info A inner join ordering on A.partner_order_id = ordering.partner_order_id
		                where A.cart_info_status='결제완료' or A.cart_info_status='결제취소'
		                order by a.cart_info_no desc, ordering.process_time desc
			)RN where rn.member_no=#{member_no}
		)where rn between 1 and 4
	</select>
	
</mapper>